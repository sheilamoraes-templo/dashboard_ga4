"""
Configura√ß√£o do Pipeline GA4
Arquivo de configura√ß√£o para facilitar o uso do pipeline
"""

# Configura√ß√µes do Pipeline GA4
PIPELINE_CONFIG = {
    # Per√≠odos padr√£o
    "default_days": 30,
    "quick_days": 7,
    "max_days": 90,
    
    # Limites de dados
    "top_pages_limit": 50,
    "video_events_limit": 100,
    
    # Configura√ß√µes de cache
    "cache_ttl_minutes": 30,
    
    # Arquivos de sa√≠da
    "output_files": {
        "kpis_daily": "kpis_daily.csv",
        "pages_top": "pages_top.csv", 
        "devices": "devices.csv",
        "first_user_acquisition": "first_user_acquisition.csv",
        "video_events": "video_events.csv",
        "weekly_comparison": "weekly_comparison.csv",
        "days_with_most_users": "days_with_most_users.csv"
    },
    
    # M√©tricas espec√≠ficas solicitadas
    "required_metrics": [
        "users",
        "sessions", 
        "screenPageViews",
        "averageSessionDuration",
        "bounceRate"
    ],
    
    # Eventos de v√≠deo espec√≠ficos
    "video_events": [
        "video_start",
        "video_progress", 
        "video_complete"
    ],
    
    # Dimens√µes para an√°lise temporal
    "temporal_dimensions": [
        "date",
        "yearWeek",
        "dayOfWeek"
    ],
    
    # Dimens√µes para an√°lise de aquisi√ß√£o
    "acquisition_dimensions": [
        "firstUserSource",
        "firstUserMedium",
        "firstUserCampaign"
    ]
}

# Comandos de execu√ß√£o
EXECUTION_COMMANDS = {
    "pipeline_padrao": "python ga4_pipeline.py --days 30",
    "pipeline_rapido": "python ga4_pipeline.py --quick", 
    "pipeline_completo": "python ga4_pipeline.py --full --days 30",
    "download_direto": "python download_ga4_data.py",
    "menu_interativo": "python run_pipeline.py",
    "dashboard": "streamlit run streamlit_dashboard.py"
}

# Instru√ß√µes de uso
USAGE_INSTRUCTIONS = """
üöÄ PIPELINE GA4 - INSTRU√á√ïES DE USO

üìã COMANDOS DISPON√çVEIS:

1. Pipeline Padr√£o (30 dias):
   python ga4_pipeline.py --days 30

2. Pipeline R√°pido (7 dias):
   python ga4_pipeline.py --quick

3. Pipeline Completo (30 dias):
   python ga4_pipeline.py --full --days 30

4. Download Direto:
   python download_ga4_data.py

5. Menu Interativo:
   python run_pipeline.py

6. Executar Dashboard:
   streamlit run streamlit_dashboard.py

üìä DADOS BAIXADOS:

‚úÖ M√©tricas Principais:
   - Usu√°rios, Sess√µes, Pageviews
   - Dura√ß√£o m√©dia de sess√£o
   - Taxa de rejei√ß√£o

‚úÖ Top P√°ginas e Links:
   - P√°ginas mais acessadas
   - Links mais clicados
   - An√°lise de tr√°fego por p√°gina

‚úÖ Breakdown por Dispositivo:
   - Desktop, Mobile, Tablet
   - Distribui√ß√£o de usu√°rios

‚úÖ Primeiros Acessos:
   - Source/Medium de aquisi√ß√£o
   - Novos usu√°rios por fonte
   - An√°lise de canais

‚úÖ Eventos de V√≠deo:
   - video_start
   - video_progress
   - video_complete

‚úÖ An√°lise Temporal:
   - Dias com mais usu√°rios
   - Compara√ß√£o semanal
   - Tend√™ncias temporais

üìÅ ARQUIVOS GERADOS:
   - kpis_daily.csv
   - pages_top.csv
   - devices.csv
   - first_user_acquisition.csv
   - video_events.csv
   - weekly_comparison.csv
   - days_with_most_users.csv

üîß PR√â-REQUISITOS:
   - Credenciais GA4 em 'credenciais_google_ga4.json'
   - Propriedade GA4 configurada
   - Python 3.8+ com depend√™ncias instaladas

üåê AP√ìS O DOWNLOAD:
   Execute: streamlit run streamlit_dashboard.py
   Acesse: http://localhost:8501
"""
